{"ast":null,"code":"import _objectWithoutProperties from \"/home/new8/Desktop/redux_calculator/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/new8/Desktop/redux_calculator/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Addition, values } from './reducers/counter';\nimport './App.css'; // contributor - Sunil PutteGowda (hp.sunilkumar793@gmail.com)\n\nconst App = (_ref) => {\n  let input1 = _ref.input1,\n      input2 = _ref.input2,\n      sum = _ref.sum,\n      props = _objectWithoutProperties(_ref, [\"input1\", \"input2\", \"sum\"]);\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Input1:\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: input1,\n    onClick: () => props.values(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), \"Input2:\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: input2,\n    onClick: () => props.values(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => props.Addition(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, sum));\n};\n\nconst mapStateToProps = ({\n  counter\n}) => ({\n  input1: counter.input1,\n  input2: counter.input2,\n  sum: counter.sum\n});\n\nconst mapDispatchPropsToProps = dispatch => bindActionCreators({\n  Addition,\n  bnval,\n  values\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchPropsToProps)(App);","map":{"version":3,"sources":["/home/new8/Desktop/redux_calculator/src/App.js"],"names":["React","connect","bindActionCreators","Addition","values","App","input1","input2","sum","props","mapStateToProps","counter","mapDispatchPropsToProps","dispatch","bnval"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAAQC,QAAR,EAAiBC,MAAjB,QAA8B,oBAA9B;AACA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,GAAG,GAAG,UAAqC;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAApBC,GAAoB,QAApBA,GAAoB;AAAA,MAAZC,KAAY;;AAC/C,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEH,MAA1B;AAAkC,IAAA,OAAO,EAAE,MAAIG,KAAK,CAACL,MAAN,CAAa,IAAb,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,aAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEG,MAA1B;AAAkC,IAAA,OAAO,EAAE,MAAIE,KAAK,CAACL,MAAN,CAAa,KAAb,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAWE;AAAQ,IAAA,OAAO,EAAE,MAAMK,KAAK,CAACN,QAAN,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXF,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCK,GADD,CAnBJ,CADF;AA4BD,CA7BD;;AA+BA,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAkB;AACxCL,EAAAA,MAAM,EAACK,OAAO,CAACL,MADyB;AAExCC,EAAAA,MAAM,EAACI,OAAO,CAACJ,MAFyB;AAGxCC,EAAAA,GAAG,EAAEG,OAAO,CAACH;AAH2B,CAAlB,CAAxB;;AAMA,MAAMI,uBAAuB,GAAIC,QAAD,IAAcX,kBAAkB,CAAC;AAC/DC,EAAAA,QAD+D;AACtDW,EAAAA,KADsD;AAChDV,EAAAA;AADgD,CAAD,EAE7DS,QAF6D,CAAhE;;AAIA,eAAeZ,OAAO,CAACS,eAAD,EAAkBE,uBAAlB,CAAP,CAAkDP,GAAlD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {Addition,values} from './reducers/counter';\nimport './App.css';\n\n// contributor - Sunil PutteGowda (hp.sunilkumar793@gmail.com)\nconst App = ({ input1,input2,sum, ...props }) => {\n  return (\n    <div className=\"App\">\n    Input1:\n      <div>\n        <input type=\"text\" value={input1} onClick={()=>props.values(true)}></input>\n      </div>\n    Input2:\n      <div>\n        <input type=\"text\" value={input2} onClick={()=>props.values(false)}></input>\n       \n      </div>\n   \n      <button onClick={() => props.Addition()}>\n      +\n      </button>\n\n      {/* <button onClick={() => props.bnval(1)}>\n      1\n      </button> */}\n      \n        <h1>\n        {sum}\n        </h1>\n      {/* <button onClick={() => props.decrement()}>\n        -\n      </button> */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ counter }) => ({\n  input1:counter.input1,\n  input2:counter.input2,\n  sum: counter.sum\n});\n\nconst mapDispatchPropsToProps = (dispatch) => bindActionCreators({\n  Addition,bnval,values\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchPropsToProps)(App);\n"]},"metadata":{},"sourceType":"module"}