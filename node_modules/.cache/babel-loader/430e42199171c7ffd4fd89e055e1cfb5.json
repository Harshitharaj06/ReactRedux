{"ast":null,"code":"import _defineProperty from \"/home/new8/Desktop/redux_calculator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst ADD = 'ADD'; // const DEC = 'DEC';\n\nconst initialValues = {\n  input1: 0,\n  input2: 0,\n  sum: 0,\n  flag: true\n};\nexport default ((state = initialValues, action) => {\n  switch (action.type) {\n    case \"val\":\n      if (action.value === true) {\n        return _objectSpread({}, state, {\n          flag: true\n        });\n      } else {\n        return _objectSpread({}, state, {\n          flag: false\n        });\n      }\n\n    case \"bn\":\n      if (state.flag === true) {\n        return _objectSpread({}, state, {\n          input1: state.input1 * 10 + action.value\n        });\n      } else return _objectSpread({}, state, {\n        input2: state.input2 * 10 + action.value\n      });\n\n    case ADD:\n      return {\n        sum: state.input1 + state.input2\n      };\n\n    case SUB:\n      return {\n        sum: state.input1 - state.input2\n      };\n\n    case MUL:\n      return {\n        sum: state.input1 * state.input2\n      };\n\n    case DIV:\n      return {\n        sum: state.input1 / state.input2\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n});\nexport const values = item => {\n  return {\n    type: \"val\",\n    value: item\n  };\n};\nexport const Addition = () => {\n  return {\n    type: ADD\n  };\n};\nexport const Subtratction = () => {\n  return {\n    type: SUB\n  };\n};\nexport const Multiplication = () => {\n  return {\n    type: MUL\n  };\n};\nexport const Division = () => {\n  return {\n    type: DIV\n  };\n};\nexport const bnval = item => {\n  return {\n    type: \"bn\",\n    value: item\n  };\n}; // export const decrement = () => {\n//   return {\n//     type: DEC\n//   }\n// };","map":{"version":3,"sources":["/home/new8/Desktop/redux_calculator/src/reducers/counter.js"],"names":["ADD","initialValues","input1","input2","sum","flag","state","action","type","value","SUB","MUL","DIV","values","item","Addition","Subtratction","Multiplication","Division","bnval"],"mappings":";;;;;;AAAA,MAAMA,GAAG,GAAG,KAAZ,C,CACA;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAC,CADa;AAEpBC,EAAAA,MAAM,EAAC,CAFa;AAGpBC,EAAAA,GAAG,EAAC,CAHgB;AAIpBC,EAAAA,IAAI,EAAC;AAJe,CAAtB;AAOA,gBAAe,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACI,UAAGD,MAAM,CAACE,KAAP,KAAe,IAAlB,EACA;AACI,iCAAUH,KAAV;AAAgBD,UAAAA,IAAI,EAAC;AAArB;AACH,OAHD,MAKA;AACI,iCAAUC,KAAV;AAAgBD,UAAAA,IAAI,EAAC;AAArB;AAEH;;AACL,SAAK,IAAL;AACI,UAAGC,KAAK,CAACD,IAAN,KAAa,IAAhB,EACA;AACI,iCAAUC,KAAV;AAAgBJ,UAAAA,MAAM,EAACI,KAAK,CAACJ,MAAN,GAAa,EAAb,GAAiBK,MAAM,CAACE;AAA/C;AACH,OAHD,MAKA,yBAAUH,KAAV;AAAgBH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa,EAAb,GAAiBI,MAAM,CAACE;AAA/C;;AACA,SAAKT,GAAL;AACA,aAAO;AAAEI,QAAAA,GAAG,EAACE,KAAK,CAACJ,MAAN,GAAeI,KAAK,CAACH;AAA3B,OAAP;;AACA,SAAKO,GAAL;AACF,aAAO;AAAEN,QAAAA,GAAG,EAACE,KAAK,CAACJ,MAAN,GAAeI,KAAK,CAACH;AAA3B,OAAP;;AACA,SAAKQ,GAAL;AACA,aAAO;AAAEP,QAAAA,GAAG,EAACE,KAAK,CAACJ,MAAN,GAAeI,KAAK,CAACH;AAA3B,OAAP;;AACA,SAAKS,GAAL;AACA,aAAO;AAAER,QAAAA,GAAG,EAACE,KAAK,CAACJ,MAAN,GAAeI,KAAK,CAACH;AAA3B,OAAP;;AAEF;AACE,aAAOG,KAAP;AA5BJ;;AA6BC;AACF,CA/BD;AAiCA,OAAO,MAAMO,MAAM,GAAEC,IAAD,IACpB;AACE,SAAM;AACFN,IAAAA,IAAI,EAAC,KADH;AAEFC,IAAAA,KAAK,EAACK;AAFJ,GAAN;AAID,CANM;AAOP,OAAO,MAAMC,QAAQ,GAAE,MAAM;AAC3B,SAAO;AACLP,IAAAA,IAAI,EAACR;AADA,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMgB,YAAY,GAAE,MAAM;AAC7B,SAAO;AACLR,IAAAA,IAAI,EAACE;AADA,GAAP;AAGD,CAJI;AAKL,OAAO,MAAMO,cAAc,GAAE,MAAM;AACjC,SAAO;AACLT,IAAAA,IAAI,EAACG;AADA,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMO,QAAQ,GAAE,MAAM;AAC3B,SAAO;AACLV,IAAAA,IAAI,EAACI;AADA,GAAP;AAGD,CAJM;AAOT,OAAO,MAAMO,KAAK,GAAEL,IAAD,IAAQ;AACvB,SAAM;AACFN,IAAAA,IAAI,EAAC,IADH;AAEFC,IAAAA,KAAK,EAACK;AAFJ,GAAN;AAIH,CALM,C,CAOP;AACA;AACA;AACA;AACA","sourcesContent":["const ADD = 'ADD'\n// const DEC = 'DEC';\n\nconst initialValues = {\n  input1:0,\n  input2:0,\n  sum:0,\n  flag:true\n}\n\nexport default (state = initialValues, action) => {\n  switch (action.type) {\n    case \"val\":                                          \n        if(action.value===true)\n        {\n            return{...state,flag:true}\n        }\n        else\n        {\n            return{...state,flag:false}\n\n        }\n    case \"bn\":\n        if(state.flag===true)\n        {\n            return{...state,input1:state.input1*10+ action.value}\n        }\n        else\n        return{...state,input2:state.input2*10+ action.value}\n        case ADD : \n        return { sum:state.input1 + state.input2 };\n        case SUB : \n      return { sum:state.input1 - state.input2 };\n      case MUL : \n      return { sum:state.input1 * state.input2 };\n      case DIV : \n      return { sum:state.input1 / state.input2 };\n\n    default :\n      return state;\n  };\n};\n\nexport const values=(item)=>\n{\n  return{\n      type:\"val\",\n      value:item\n  }\n}\nexport const Addition= () => {\n  return {\n    type:ADD\n  }\n};\nexport const Subtratction= () => {\n    return {\n      type:SUB\n    }\n  };\n  export const Multiplication= () => {\n    return {\n      type:MUL\n    }\n  };\n  export const Division= () => {\n    return {\n      type:DIV\n    }\n  };\n  \n\nexport const bnval=(item)=>{\n    return{\n        type:\"bn\",\n        value:item\n    }\n}\n\n// export const decrement = () => {\n//   return {\n//     type: DEC\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}